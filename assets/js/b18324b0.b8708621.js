"use strict";(self.webpackChunkolricweb=self.webpackChunkolricweb||[]).push([[121],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return f}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var u=n.createContext({}),l=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=l(e.components);return n.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,u=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=l(r),f=a,d=m["".concat(u,".").concat(f)]||m[f]||p[f]||i;return r?n.createElement(d,o(o({ref:t},c),{},{components:r})):n.createElement(d,o({ref:t},c))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=m;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var l=2;l<i;l++)o[l]=r[l];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},4226:function(e,t,r){r.r(t),r.d(t,{assets:function(){return c},contentTitle:function(){return u},default:function(){return f},frontMatter:function(){return s},metadata:function(){return l},toc:function(){return p}});var n=r(7462),a=r(3366),i=(r(7294),r(3905)),o=["components"],s={sidebar_position:2},u="Features",l={unversionedId:"overview/features",id:"overview/features",title:"Features",description:"* Designed to share some transient, approximate, fast-changing data between servers,",source:"@site/docs/overview/features.md",sourceDirName:"overview",slug:"/overview/features",permalink:"/docs/overview/features",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/overview/features.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"What is Olric?",permalink:"/docs/overview/intro"}},c={},p=[],m={toc:p};function f(e){var t=e.components,r=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"features"},"Features"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Designed to share some transient, approximate, fast-changing data between servers,"),(0,i.kt)("li",{parentName:"ul"},"Accepts arbitrary types as value,"),(0,i.kt)("li",{parentName:"ul"},"Only in-memory,"),(0,i.kt)("li",{parentName:"ul"},"GC-friendly storage engine,"),(0,i.kt)("li",{parentName:"ul"},"O(1) running time for lookups,"),(0,i.kt)("li",{parentName:"ul"},"Embeddable but can be used as a language-independent service,"),(0,i.kt)("li",{parentName:"ul"},"Supports different eviction algorithms,"),(0,i.kt)("li",{parentName:"ul"},"Supports Redis protocol,"),(0,i.kt)("li",{parentName:"ul"},"Thread-safe by default,"),(0,i.kt)("li",{parentName:"ul"},"Highly available and horizontally scalable,"),(0,i.kt)("li",{parentName:"ul"},"Provides best-effort consistency guarantees without being a complete CP (indeed PA/EC) solution,"),(0,i.kt)("li",{parentName:"ul"},"Supports replication by default (with sync and async options),"),(0,i.kt)("li",{parentName:"ul"},"Quorum-based voting for replica control (Read/Write quorums),"),(0,i.kt)("li",{parentName:"ul"},"Supports atomic operations,"),(0,i.kt)("li",{parentName:"ul"},"Implements an ",(0,i.kt)("a",{parentName:"li",href:"#query"},"iterator")," on distributed maps,"),(0,i.kt)("li",{parentName:"ul"},"Provides a plugin interface for service discovery daemons,"),(0,i.kt)("li",{parentName:"ul"},"Provides a locking primitive which inspired by ",(0,i.kt)("a",{parentName:"li",href:"https://redis.io/commands/setnx#design-pattern-locking-with-codesetnxcode"},"SETNX of Redis"),","),(0,i.kt)("li",{parentName:"ul"},"Provides a drop-in replacement for Redis Publish/Subscribe messaging system.")))}f.isMDXComponent=!0}}]);